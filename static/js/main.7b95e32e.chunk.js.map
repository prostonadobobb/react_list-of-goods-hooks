{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReverse","setIsReverse","visibleGoods","goods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","goods1","goods2","length","reverse","getPreparedGoods","className","type","onClick","cn","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,oBAAAA,E,iBAAAA,M,KA6BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EA3BR,SACEC,EACAL,GAEC,IADDE,EACA,wDACME,EAAY,YAAOC,GAezB,OAbIL,IAAaL,EAASW,SACxBF,EACGG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACrCT,IAAaL,EAASgB,QAC/BP,EAAaG,MACX,SAACK,EAAQC,GAAT,OAAoBD,EAAOE,OAASD,EAAOC,UAI3CZ,GACFE,EAAaW,UAGRX,EAOcY,CAAiBpB,EAAiBI,EAAUE,GAOjE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,WACPlB,EAAYN,EAASW,WAEvBW,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYpB,IAAaL,EAASW,WAPxC,iCAaA,wBACEY,KAAK,SACLC,QAAS,WACPlB,EAAYN,EAASgB,SAEvBM,UAAWG,IAAG,SAAU,aACtB,CACE,WAAYpB,IAAaL,EAASgB,SAPxC,4BAaA,wBACEO,KAAK,SACLC,QAAS,WACPhB,GAAa,SAAAkB,GAAI,OAAKA,MAExBJ,UAAWG,IAAG,SAAU,aACtB,CACE,YAAalB,IAPnB,sBAaEF,GAAYE,IACZ,wBACEgB,KAAK,SACLC,QAlDU,WAClBlB,EAAYN,EAASI,MACrBI,GAAa,IAiDLc,UAAU,4BAHZ,sBAUJ,6BACE,6BACGb,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCjHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b95e32e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = '',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReverse = false,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods\n      .sort((good1, good2) => good1.localeCompare(good2));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort(\n      (goods1, goods2) => goods1.length - goods2.length,\n    );\n  }\n\n  if (isReverse) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortType, isReverse);\n\n  const resetButton = () => {\n    setSortType(SortType.NONE);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n          className={cn('button', 'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsReverse(prev => !prev);\n          }}\n          className={cn('button', 'is-warning',\n            {\n              'is-light': !isReverse,\n            })}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReverse) && (\n          <button\n            type=\"button\"\n            onClick={resetButton}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}